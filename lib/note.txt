Note app from tharwat course 
       1- ui : - font aweasome icons package for cusotm icons 
            you can get any package easily by search in vscode
             - do ui firstly for (client if want see some result , this trick help you
            too plan for the flow easily to build the logic.).
            -listview.builder deal with list so you must get the list of data ready if that from splight or api or firebase.
            - and it have built in for
            -stack is not flex for ui
            -if you use const ..use final or remove it and make stateful Widget
            - list view by default has padding and you can remove it by write in it padding : edgeinsets.zero,
            -showmodelbottomsheet has shape to give it raduis border
             -look at this :
                 Widget build(BuildContext context) {
             return TextField(
              decoration: InputDecoration(
                  border: buildborder(),
                 enabledBorder: buildborder(), 
                 ),
             );
         }

         OutlineInputBorder buildborder() {
             return OutlineInputBorder(
                 borderRadius: BorderRadius.circular(8),
                 borderSide: const BorderSide(
                color: Colors.white,
                ),
                 );
            }

            -you can't use spacer widget in singlechildscrollview widget
            - any widget's variables must be final (any widget called immutable that mean can't change so their constructor is const)


       2- logic :
            - hive package for pure dart applications(projects) hive_flutter is a extenstion from it to deal with flutter 
            - build runner ==> way to make things easily for constant codes (called generate the code)
            - hive generate to generate hive code correctly.
            - hive is noSQL Database. (store data in form ' key : value ' in box (equal collection in firebase),)
            - store the value in just primitive data but if you want to store objects because this is best way and easily in work
            - you just need to code your model .optional you can make your model extend from HiveObject to easy process
            - 
        import 'package:hive/hive.dart';

part 'note_model.g.dart';

//normal to be error becasue still not created yet
//will generate this file adapter for this model must write name correctly
@HiveType(typeId: 0)
//for your model and all about 255
//here place to generate
class NoteModel extends HiveObject {
  @HiveField(0)
  //unique per class
  final String title;
  @HiveField(1)
  final String subTitle;
  @HiveField(2)
  final String date;
  @HiveField(3)
  final int color;

  NoteModel(
      {required this.title,
      required this.subTitle,
      required this.date,
      required this.color});
}
to start this write in terminal this line :  flutter packages pub run build_runner build

- stateless doesn't has variables : ==> can make variable live in bloc and still stateless.

-input - validate - store in hive 


add Bloc statemangment to project :
    1- single responsability ==> should be make cubit for every feature or small feature.